worker_processes auto;

events {
  worker_connections 1024; #  4096 for 5 servers
}

http {
  upstream kibana_server {
      server localhost:5601;
      keepalive 15;
  }

  server {
    listen 8080;
    listen 443 ssl;

    server_name elk_nginx;

    # server certificate
    ssl_certificate "{{ app_path }}/ssl_cert/ca.crt";
    ssl_certificate_key "{{ app_path }}/ssl_cert/ca.key";
    
    # client certificate
#    ssl_client_certificate "{{ app_path }}/ssl_cert/user.crt;

    # openssl user:pasword auth from .espasswd files
    auth_basic "Restricted Access";
    auth_basic_user_file "{{ app_path }}/.espasswd;

    location / {
      proxy_pass http://kibana_server;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection ‘upgrade’;
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
    }
  }
}













  # HTTP reverse proxy for kibana
  server {
    listen 8080;

    # ssl user:pasword auth from .espasswd files
    auth_basic "Protected Kibana";
    auth_basic_user_file "{{ app_path }}/.espasswd;

    location / {
      proxy_pass http://elasticsearch_servers;
      proxy_http_version 1.1;
      proxy_set_header Connection "Keep-Alive";
      proxy_set_header Proxy-Connection "Keep-Alive";
      proxy_connect_timeout 5s;
      proxy_read_timeout 10s;
    }
  }    

  # HTTPS reverse proxy for kibana
  server {
    listen 443 ssl;
    server_name kibana;
    
    # server certificate
    ssl_certificate "{{ app_path }}/ssl_cert/ca.crt";
    ssl_certificate_key "{{ app_path }}/ssl_cert/ca.key";
    
    # client certificate
    ssl_client_certificate "{{ app_path }}/ssl_cert/user.crt;

    location / {
      proxy_pass http://elasticsearch_servers;
      proxy_http_version 1.1;
      proxy_set_header Connection "Keep-Alive";
      proxy_set_header Proxy-Connection "Keep-Alive";
      proxy_connect_timeout 5s;
      proxy_read_timeout 10s;
    }
  }    

} # http

